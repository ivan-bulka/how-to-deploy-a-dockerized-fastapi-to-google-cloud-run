name: Deploy to Cloud Run

env:
  SERVICE_NAME: test-github-action-deployment
  PROJECT_ID: risk-insight---non-prod
  DOCKER_IMAGE_URL: us-central1-docker.pkg.dev/risk-insight---non-prod/test-github-action-deployment/custom-fastapi
  API_GATEWAY_CONFIG_SPEC: openapi2-run.yaml
  API_ID: test-deployment-api
  API_GATEWAY_ID: test-deployment-api-gateway
  REGION: us-central1


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dockerize-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Google Cloud Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

#      - name: Configure Docker
#        run: |
#          gcloud auth configure-docker us-central1-docker.pkg.dev
#
#      - name: Build and Push Docker Image
#        run: |
#          docker build -t ${{ env.DOCKER_IMAGE_URL }}:latest -f Dockerfile.prod .
#          docker push ${{ env.DOCKER_IMAGE_URL }}:latest
#
#      - name: Deploy to Cloud Run
#        run: |
#          echo SERVICE_NAME $SERVICE_NAME
#          gcloud run deploy $SERVICE_NAME \
#            --image ${{ env.DOCKER_IMAGE_URL }}:latest \
#            --platform managed \
#            --region ${{env.REGION}} \
#            --allow-unauthenticated
      - name: Generate API_GATEWAY_CONFIG_ID
        id: uuid
        run: echo "API_GATEWAY_CONFIG_ID=\$(uuidgen | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Configure API Gateway config
        run: |
          gcloud api-gateway api-configs create ${{ env.API_GATEWAY_CONFIG_ID}} \
            --api=${{ env.API_ID }} \
            --openapi-spec=${{ env.API_GATEWAY_CONFIG_SPEC }}
      - name: Deploy API Gateway
        run: |
          gcloud api-gateway gateways update ${{ env.API_GATEWAY_ID }} \
            --api=${{ env.API_ID}} \
            --api-config=${{ env.API_GATEWAY_CONFIG_ID }} \
            --location=${{ env.REGION }}

